<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="93" passed="93" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-12-05T02:36:03 MSK" name="Suite1" finished-at="2021-12-05T02:36:03 MSK" duration-ms="198">
    <groups>
      <group name="service">
        <method signature="AbsValueOfExpressionTest.testAbsValueOfExpression([D,double)[pri:0, instance:test.jwd.task01basic.service.AbsValueOfExpressionTest@28f3b248]" name="testAbsValueOfExpression" class="test.jwd.task01basic.service.AbsValueOfExpressionTest"/>
        <method signature="AverageOfTwoNumberTest.testCalculationAverage([D,double)[pri:0, instance:test.jwd.task01basic.service.AverageOfTwoNumberTest@22e357dc]" name="testCalculationAverage" class="test.jwd.task01basic.service.AverageOfTwoNumberTest"/>
        <method signature="ConvertToCharTest.testConvertToChar([C,int)[pri:0, instance:test.jwd.task01basic.service.ConvertToCharTest@10feca44]" name="testConvertToChar" class="test.jwd.task01basic.service.ConvertToCharTest"/>
        <method signature="ConvertToIntTest.testConvertToInt(char,int)[pri:0, instance:test.jwd.task01basic.service.ConvertToIntTest@3059cbc]" name="testConvertToInt" class="test.jwd.task01basic.service.ConvertToIntTest"/>
        <method signature="DoesBrickFitRectangleTest.testNegBrickAndRectangle([D,boolean)[pri:0, instance:test.jwd.task01basic.service.DoesBrickFitRectangleTest@7e5afaa6]" name="testNegBrickAndRectangle" class="test.jwd.task01basic.service.DoesBrickFitRectangleTest"/>
        <method signature="DoesBrickFitRectangleTest.testPosBrickAndRectangle([D,boolean)[pri:0, instance:test.jwd.task01basic.service.DoesBrickFitRectangleTest@7e5afaa6]" name="testPosBrickAndRectangle" class="test.jwd.task01basic.service.DoesBrickFitRectangleTest"/>
        <method signature="FunctionValueTest.testFunctionValue()[pri:0, instance:test.jwd.task01basic.service.FunctionValueTest@2a54a73f]" name="testFunctionValue" class="test.jwd.task01basic.service.FunctionValueTest"/>
        <method signature="MinOfTwoNumberTest.testMinOfTwo([D,double)[pri:0, instance:test.jwd.task01basic.service.MinOfTwoNumberTest@662b4c69]" name="testMinOfTwo" class="test.jwd.task01basic.service.MinOfTwoNumberTest"/>
        <method signature="PhysicsTest.testDistance([I,int)[pri:0, instance:test.jwd.task01basic.service.PhysicsTest@14555e0a]" name="testDistance" class="test.jwd.task01basic.service.PhysicsTest"/>
        <method signature="QuantityOfPositiveNumberTest.testDataForQuantityOfPositiveNumber([I,int)[pri:0, instance:test.jwd.task01basic.service.QuantityOfPositiveNumberTest@76c3e77a]" name="testDataForQuantityOfPositiveNumber" class="test.jwd.task01basic.service.QuantityOfPositiveNumberTest"/>
        <method signature="RectangleAreaTest.testAreaCalculation([D,double)[pri:0, instance:test.jwd.task01basic.service.RectangleAreaTest@2b48a640]" name="testAreaCalculation" class="test.jwd.task01basic.service.RectangleAreaTest"/>
        <method signature="SumOfOddNumberTest.testSumOfOddNumber()[pri:0, instance:test.jwd.task01basic.service.SumOfOddNumberTest@6d4e5011]" name="testSumOfOddNumber" class="test.jwd.task01basic.service.SumOfOddNumberTest"/>
        <method signature="SumOfPositiveRowMemberTest.testSumOfPositive([D,double)[pri:0, instance:test.jwd.task01basic.service.SumOfPositiveRowMemberTest@67c33749]" name="testSumOfPositive" class="test.jwd.task01basic.service.SumOfPositiveRowMemberTest"/>
        <method signature="TriangleAreaTest.testAreaCalculation(double,double)[pri:0, instance:test.jwd.task01basic.service.TriangleAreaTest@3d5c822d]" name="testAreaCalculation" class="test.jwd.task01basic.service.TriangleAreaTest"/>
        <method signature="TriangleHeightTest.testHeightCalculation(double,double)[pri:0, instance:test.jwd.task01basic.service.TriangleHeightTest@73700b80]" name="testHeightCalculation" class="test.jwd.task01basic.service.TriangleHeightTest"/>
        <method signature="TriangleRadiusInTest.testRadiusInCalculation(double,double)[pri:0, instance:test.jwd.task01basic.service.TriangleRadiusInTest@3e84448c]" name="testRadiusInCalculation" class="test.jwd.task01basic.service.TriangleRadiusInTest"/>
        <method signature="TriangleRadiusOutTest.testRadiusOutCalculation(double,double)[pri:0, instance:test.jwd.task01basic.service.TriangleRadiusOutTest@429bffaa]" name="testRadiusOutCalculation" class="test.jwd.task01basic.service.TriangleRadiusOutTest"/>
      </group> <!-- service -->
    </groups>
    <test started-at="2021-12-05T02:36:03 MSK" name="CheckGroup" finished-at="2021-12-05T02:36:03 MSK" duration-ms="198">
      <class name="test.jwd.task01basic.service.AbsValueOfExpressionTest">
        <test-method signature="testAbsValueOfExpression([D,double)[pri:0, instance:test.jwd.task01basic.service.AbsValueOfExpressionTest@28f3b248]" started-at="2021-12-05T02:36:03 MSK" name="testAbsValueOfExpression" data-provider="AbsValueOfExpression" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@38145825]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAbsValueOfExpression -->
        <test-method signature="testAbsValueOfExpression([D,double)[pri:0, instance:test.jwd.task01basic.service.AbsValueOfExpressionTest@28f3b248]" started-at="2021-12-05T02:36:03 MSK" name="testAbsValueOfExpression" data-provider="AbsValueOfExpression" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@f68f0dc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[36.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAbsValueOfExpression -->
        <test-method signature="testAbsValueOfExpression([D,double)[pri:0, instance:test.jwd.task01basic.service.AbsValueOfExpressionTest@28f3b248]" started-at="2021-12-05T02:36:03 MSK" name="testAbsValueOfExpression" data-provider="AbsValueOfExpression" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@1224144a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAbsValueOfExpression -->
        <test-method signature="testAbsValueOfExpression([D,double)[pri:0, instance:test.jwd.task01basic.service.AbsValueOfExpressionTest@28f3b248]" started-at="2021-12-05T02:36:03 MSK" name="testAbsValueOfExpression" data-provider="AbsValueOfExpression" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@1b66c0fb]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[23.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAbsValueOfExpression -->
        <test-method signature="testAbsValueOfExpression([D,double)[pri:0, instance:test.jwd.task01basic.service.AbsValueOfExpressionTest@28f3b248]" started-at="2021-12-05T02:36:03 MSK" name="testAbsValueOfExpression" data-provider="AbsValueOfExpression" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@d2de489]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[18.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAbsValueOfExpression -->
        <test-method signature="testAbsValueOfExpression([D,double)[pri:0, instance:test.jwd.task01basic.service.AbsValueOfExpressionTest@28f3b248]" started-at="2021-12-05T02:36:03 MSK" name="testAbsValueOfExpression" data-provider="AbsValueOfExpression" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@1df8da7a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAbsValueOfExpression -->
        <test-method signature="testAbsValueOfExpression([D,double)[pri:0, instance:test.jwd.task01basic.service.AbsValueOfExpressionTest@28f3b248]" started-at="2021-12-05T02:36:03 MSK" name="testAbsValueOfExpression" data-provider="AbsValueOfExpression" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@2f953efd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAbsValueOfExpression -->
      </class> <!-- test.jwd.task01basic.service.AbsValueOfExpressionTest -->
      <class name="test.jwd.task01basic.service.SumOfPositiveRowMemberTest">
        <test-method signature="testSumOfPositive([D,double)[pri:0, instance:test.jwd.task01basic.service.SumOfPositiveRowMemberTest@67c33749]" started-at="2021-12-05T02:36:03 MSK" name="testSumOfPositive" data-provider="SumOfPositive" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@66ea810]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.8333333333333333]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSumOfPositive -->
      </class> <!-- test.jwd.task01basic.service.SumOfPositiveRowMemberTest -->
      <class name="test.jwd.task01basic.service.MinOfTwoNumberTest">
        <test-method signature="testMinOfTwo([D,double)[pri:0, instance:test.jwd.task01basic.service.MinOfTwoNumberTest@662b4c69]" started-at="2021-12-05T02:36:03 MSK" name="testMinOfTwo" data-provider="MinOfTwo" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@12591ac8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinOfTwo -->
        <test-method signature="testMinOfTwo([D,double)[pri:0, instance:test.jwd.task01basic.service.MinOfTwoNumberTest@662b4c69]" started-at="2021-12-05T02:36:03 MSK" name="testMinOfTwo" data-provider="MinOfTwo" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@508dec2b]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinOfTwo -->
        <test-method signature="testMinOfTwo([D,double)[pri:0, instance:test.jwd.task01basic.service.MinOfTwoNumberTest@662b4c69]" started-at="2021-12-05T02:36:03 MSK" name="testMinOfTwo" data-provider="MinOfTwo" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@9816741]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinOfTwo -->
        <test-method signature="testMinOfTwo([D,double)[pri:0, instance:test.jwd.task01basic.service.MinOfTwoNumberTest@662b4c69]" started-at="2021-12-05T02:36:03 MSK" name="testMinOfTwo" data-provider="MinOfTwo" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@5d908d47]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinOfTwo -->
        <test-method signature="testMinOfTwo([D,double)[pri:0, instance:test.jwd.task01basic.service.MinOfTwoNumberTest@662b4c69]" started-at="2021-12-05T02:36:03 MSK" name="testMinOfTwo" data-provider="MinOfTwo" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@2d29b4ee]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinOfTwo -->
        <test-method signature="testMinOfTwo([D,double)[pri:0, instance:test.jwd.task01basic.service.MinOfTwoNumberTest@662b4c69]" started-at="2021-12-05T02:36:03 MSK" name="testMinOfTwo" data-provider="MinOfTwo" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@6a4f1a55]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinOfTwo -->
      </class> <!-- test.jwd.task01basic.service.MinOfTwoNumberTest -->
      <class name="test.jwd.task01basic.service.RectangleAreaTest">
        <test-method signature="testAreaCalculation([D,double)[pri:0, instance:test.jwd.task01basic.service.RectangleAreaTest@2b48a640]" started-at="2021-12-05T02:36:03 MSK" name="testAreaCalculation" data-provider="DataForArea" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@626abbd0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAreaCalculation -->
        <test-method signature="testAreaCalculation([D,double)[pri:0, instance:test.jwd.task01basic.service.RectangleAreaTest@2b48a640]" started-at="2021-12-05T02:36:03 MSK" name="testAreaCalculation" data-provider="DataForArea" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@465232e9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAreaCalculation -->
        <test-method signature="testAreaCalculation([D,double)[pri:0, instance:test.jwd.task01basic.service.RectangleAreaTest@2b48a640]" started-at="2021-12-05T02:36:03 MSK" name="testAreaCalculation" data-provider="DataForArea" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@660acfb]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5000.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAreaCalculation -->
        <test-method signature="testAreaCalculation([D,double)[pri:0, instance:test.jwd.task01basic.service.RectangleAreaTest@2b48a640]" started-at="2021-12-05T02:36:03 MSK" name="testAreaCalculation" data-provider="DataForArea" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@46d59067]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAreaCalculation -->
        <test-method signature="testAreaCalculation([D,double)[pri:0, instance:test.jwd.task01basic.service.RectangleAreaTest@2b48a640]" started-at="2021-12-05T02:36:03 MSK" name="testAreaCalculation" data-provider="DataForArea" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@1f9f6368]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAreaCalculation -->
      </class> <!-- test.jwd.task01basic.service.RectangleAreaTest -->
      <class name="test.jwd.task01basic.service.SumOfOddNumberTest">
        <test-method signature="testSumOfOddNumber()[pri:0, instance:test.jwd.task01basic.service.SumOfOddNumberTest@6d4e5011]" started-at="2021-12-05T02:36:03 MSK" name="testSumOfOddNumber" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSumOfOddNumber -->
      </class> <!-- test.jwd.task01basic.service.SumOfOddNumberTest -->
      <class name="test.jwd.task01basic.service.FunctionValueTest">
        <test-method signature="testFunctionValue()[pri:0, instance:test.jwd.task01basic.service.FunctionValueTest@2a54a73f]" started-at="2021-12-05T02:36:03 MSK" name="testFunctionValue" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctionValue -->
      </class> <!-- test.jwd.task01basic.service.FunctionValueTest -->
      <class name="test.jwd.task01basic.service.QuantityOfPositiveNumberTest">
        <test-method signature="testDataForQuantityOfPositiveNumber([I,int)[pri:0, instance:test.jwd.task01basic.service.QuantityOfPositiveNumberTest@76c3e77a]" started-at="2021-12-05T02:36:03 MSK" name="testDataForQuantityOfPositiveNumber" data-provider="DataForQuantityOfPositiveNumber" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@29f7cefd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDataForQuantityOfPositiveNumber -->
        <test-method signature="testDataForQuantityOfPositiveNumber([I,int)[pri:0, instance:test.jwd.task01basic.service.QuantityOfPositiveNumberTest@76c3e77a]" started-at="2021-12-05T02:36:03 MSK" name="testDataForQuantityOfPositiveNumber" data-provider="DataForQuantityOfPositiveNumber" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@14bdbc74]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDataForQuantityOfPositiveNumber -->
        <test-method signature="testDataForQuantityOfPositiveNumber([I,int)[pri:0, instance:test.jwd.task01basic.service.QuantityOfPositiveNumberTest@76c3e77a]" started-at="2021-12-05T02:36:03 MSK" name="testDataForQuantityOfPositiveNumber" data-provider="DataForQuantityOfPositiveNumber" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@3b35a229]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDataForQuantityOfPositiveNumber -->
        <test-method signature="testDataForQuantityOfPositiveNumber([I,int)[pri:0, instance:test.jwd.task01basic.service.QuantityOfPositiveNumberTest@76c3e77a]" started-at="2021-12-05T02:36:03 MSK" name="testDataForQuantityOfPositiveNumber" data-provider="DataForQuantityOfPositiveNumber" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@6f36c2f0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDataForQuantityOfPositiveNumber -->
        <test-method signature="testDataForQuantityOfPositiveNumber([I,int)[pri:0, instance:test.jwd.task01basic.service.QuantityOfPositiveNumberTest@76c3e77a]" started-at="2021-12-05T02:36:03 MSK" name="testDataForQuantityOfPositiveNumber" data-provider="DataForQuantityOfPositiveNumber" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@45385f75]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDataForQuantityOfPositiveNumber -->
        <test-method signature="testDataForQuantityOfPositiveNumber([I,int)[pri:0, instance:test.jwd.task01basic.service.QuantityOfPositiveNumberTest@76c3e77a]" started-at="2021-12-05T02:36:03 MSK" name="testDataForQuantityOfPositiveNumber" data-provider="DataForQuantityOfPositiveNumber" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@2d0399f4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDataForQuantityOfPositiveNumber -->
        <test-method signature="testDataForQuantityOfPositiveNumber([I,int)[pri:0, instance:test.jwd.task01basic.service.QuantityOfPositiveNumberTest@76c3e77a]" started-at="2021-12-05T02:36:03 MSK" name="testDataForQuantityOfPositiveNumber" data-provider="DataForQuantityOfPositiveNumber" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@f58853c]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDataForQuantityOfPositiveNumber -->
        <test-method signature="testDataForQuantityOfPositiveNumber([I,int)[pri:0, instance:test.jwd.task01basic.service.QuantityOfPositiveNumberTest@76c3e77a]" started-at="2021-12-05T02:36:03 MSK" name="testDataForQuantityOfPositiveNumber" data-provider="DataForQuantityOfPositiveNumber" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@7dfb0c0f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDataForQuantityOfPositiveNumber -->
        <test-method signature="testDataForQuantityOfPositiveNumber([I,int)[pri:0, instance:test.jwd.task01basic.service.QuantityOfPositiveNumberTest@76c3e77a]" started-at="2021-12-05T02:36:03 MSK" name="testDataForQuantityOfPositiveNumber" data-provider="DataForQuantityOfPositiveNumber" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@14dd7b39]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDataForQuantityOfPositiveNumber -->
        <test-method signature="testDataForQuantityOfPositiveNumber([I,int)[pri:0, instance:test.jwd.task01basic.service.QuantityOfPositiveNumberTest@76c3e77a]" started-at="2021-12-05T02:36:03 MSK" name="testDataForQuantityOfPositiveNumber" data-provider="DataForQuantityOfPositiveNumber" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@2584b82d]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDataForQuantityOfPositiveNumber -->
        <test-method signature="testDataForQuantityOfPositiveNumber([I,int)[pri:0, instance:test.jwd.task01basic.service.QuantityOfPositiveNumberTest@76c3e77a]" started-at="2021-12-05T02:36:03 MSK" name="testDataForQuantityOfPositiveNumber" data-provider="DataForQuantityOfPositiveNumber" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@49c90a9c]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDataForQuantityOfPositiveNumber -->
      </class> <!-- test.jwd.task01basic.service.QuantityOfPositiveNumberTest -->
      <class name="test.jwd.task01basic.service.TriangleAreaTest">
        <test-method signature="testAreaCalculation(double,double)[pri:0, instance:test.jwd.task01basic.service.TriangleAreaTest@3d5c822d]" started-at="2021-12-05T02:36:03 MSK" name="testAreaCalculation" data-provider="DataForArea" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[43.30127018922193]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAreaCalculation -->
        <test-method signature="testAreaCalculation(double,double)[pri:0, instance:test.jwd.task01basic.service.TriangleAreaTest@3d5c822d]" started-at="2021-12-05T02:36:03 MSK" name="testAreaCalculation" data-provider="DataForArea" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.4330127018922193]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAreaCalculation -->
        <test-method signature="testAreaCalculation(double,double)[pri:0, instance:test.jwd.task01basic.service.TriangleAreaTest@3d5c822d]" started-at="2021-12-05T02:36:03 MSK" name="testAreaCalculation" data-provider="DataForArea" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.7320508075688772]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAreaCalculation -->
        <test-method signature="testAreaCalculation(double,double)[pri:0, instance:test.jwd.task01basic.service.TriangleAreaTest@3d5c822d]" started-at="2021-12-05T02:36:03 MSK" name="testAreaCalculation" data-provider="DataForArea" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.99691862125803878E18]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAreaCalculation -->
      </class> <!-- test.jwd.task01basic.service.TriangleAreaTest -->
      <class name="test.jwd.task01basic.service.DoesBrickFitRectangleTest">
        <test-method signature="testNegBrickAndRectangle([D,boolean)[pri:0, instance:test.jwd.task01basic.service.DoesBrickFitRectangleTest@7e5afaa6]" started-at="2021-12-05T02:36:03 MSK" name="testNegBrickAndRectangle" description="Negative_scenario" data-provider="BrickAndRectangleNegative" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@2254127a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <exception class="by.jwd.task01basic.service.impl.ServiceException">
            <full-stacktrace>
              <![CDATA[by.jwd.task01basic.service.impl.ServiceException
at by.jwd.task01basic.service.impl.RectangleAreaServiceImpl.doCalculation(RectangleAreaServiceImpl.java:29)
at by.jwd.task01basic.service.impl.DoesBrickFitRectangleServiceImpl.doLogic(DoesBrickFitRectangleServiceImpl.java:36)
at test.jwd.task01basic.service.DoesBrickFitRectangleTest.testNegBrickAndRectangle(DoesBrickFitRectangleTest.java:73)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- by.jwd.task01basic.service.impl.ServiceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegBrickAndRectangle -->
        <test-method signature="testNegBrickAndRectangle([D,boolean)[pri:0, instance:test.jwd.task01basic.service.DoesBrickFitRectangleTest@7e5afaa6]" started-at="2021-12-05T02:36:03 MSK" name="testNegBrickAndRectangle" description="Negative_scenario" data-provider="BrickAndRectangleNegative" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@5c86a017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <exception class="by.jwd.task01basic.service.impl.ServiceException">
            <full-stacktrace>
              <![CDATA[by.jwd.task01basic.service.impl.ServiceException
at by.jwd.task01basic.service.impl.RectangleAreaServiceImpl.doCalculation(RectangleAreaServiceImpl.java:29)
at by.jwd.task01basic.service.impl.DoesBrickFitRectangleServiceImpl.doLogic(DoesBrickFitRectangleServiceImpl.java:36)
at test.jwd.task01basic.service.DoesBrickFitRectangleTest.testNegBrickAndRectangle(DoesBrickFitRectangleTest.java:73)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- by.jwd.task01basic.service.impl.ServiceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegBrickAndRectangle -->
        <test-method signature="testNegBrickAndRectangle([D,boolean)[pri:0, instance:test.jwd.task01basic.service.DoesBrickFitRectangleTest@7e5afaa6]" started-at="2021-12-05T02:36:03 MSK" name="testNegBrickAndRectangle" description="Negative_scenario" data-provider="BrickAndRectangleNegative" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@41330d4f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <exception class="by.jwd.task01basic.service.impl.ServiceException">
            <full-stacktrace>
              <![CDATA[by.jwd.task01basic.service.impl.ServiceException
at by.jwd.task01basic.service.impl.RectangleAreaServiceImpl.doCalculation(RectangleAreaServiceImpl.java:29)
at by.jwd.task01basic.service.impl.DoesBrickFitRectangleServiceImpl.doLogic(DoesBrickFitRectangleServiceImpl.java:36)
at test.jwd.task01basic.service.DoesBrickFitRectangleTest.testNegBrickAndRectangle(DoesBrickFitRectangleTest.java:73)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- by.jwd.task01basic.service.impl.ServiceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegBrickAndRectangle -->
        <test-method signature="testNegBrickAndRectangle([D,boolean)[pri:0, instance:test.jwd.task01basic.service.DoesBrickFitRectangleTest@7e5afaa6]" started-at="2021-12-05T02:36:03 MSK" name="testNegBrickAndRectangle" description="Negative_scenario" data-provider="BrickAndRectangleNegative" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@d23e042]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <exception class="by.jwd.task01basic.service.impl.ServiceException">
            <full-stacktrace>
              <![CDATA[by.jwd.task01basic.service.impl.ServiceException
at by.jwd.task01basic.service.impl.DoesBrickFitRectangleServiceImpl.doLogic(DoesBrickFitRectangleServiceImpl.java:48)
at test.jwd.task01basic.service.DoesBrickFitRectangleTest.testNegBrickAndRectangle(DoesBrickFitRectangleTest.java:73)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- by.jwd.task01basic.service.impl.ServiceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegBrickAndRectangle -->
        <test-method signature="testNegBrickAndRectangle([D,boolean)[pri:0, instance:test.jwd.task01basic.service.DoesBrickFitRectangleTest@7e5afaa6]" started-at="2021-12-05T02:36:03 MSK" name="testNegBrickAndRectangle" description="Negative_scenario" data-provider="BrickAndRectangleNegative" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@37313c65]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <exception class="by.jwd.task01basic.service.impl.ServiceException">
            <full-stacktrace>
              <![CDATA[by.jwd.task01basic.service.impl.ServiceException
at by.jwd.task01basic.service.impl.DoesBrickFitRectangleServiceImpl.doLogic(DoesBrickFitRectangleServiceImpl.java:48)
at test.jwd.task01basic.service.DoesBrickFitRectangleTest.testNegBrickAndRectangle(DoesBrickFitRectangleTest.java:73)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- by.jwd.task01basic.service.impl.ServiceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegBrickAndRectangle -->
        <test-method signature="testNegBrickAndRectangle([D,boolean)[pri:0, instance:test.jwd.task01basic.service.DoesBrickFitRectangleTest@7e5afaa6]" started-at="2021-12-05T02:36:03 MSK" name="testNegBrickAndRectangle" description="Negative_scenario" data-provider="BrickAndRectangleNegative" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@6e2aa843]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <exception class="by.jwd.task01basic.service.impl.ServiceException">
            <full-stacktrace>
              <![CDATA[by.jwd.task01basic.service.impl.ServiceException
at by.jwd.task01basic.service.impl.DoesBrickFitRectangleServiceImpl.doLogic(DoesBrickFitRectangleServiceImpl.java:48)
at test.jwd.task01basic.service.DoesBrickFitRectangleTest.testNegBrickAndRectangle(DoesBrickFitRectangleTest.java:73)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- by.jwd.task01basic.service.impl.ServiceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegBrickAndRectangle -->
        <test-method signature="testPosBrickAndRectangle([D,boolean)[pri:0, instance:test.jwd.task01basic.service.DoesBrickFitRectangleTest@7e5afaa6]" started-at="2021-12-05T02:36:03 MSK" name="testPosBrickAndRectangle" description="Positive_scenario" data-provider="BrickAndRectanglePositive" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@798162bc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPosBrickAndRectangle -->
        <test-method signature="testPosBrickAndRectangle([D,boolean)[pri:0, instance:test.jwd.task01basic.service.DoesBrickFitRectangleTest@7e5afaa6]" started-at="2021-12-05T02:36:03 MSK" name="testPosBrickAndRectangle" description="Positive_scenario" data-provider="BrickAndRectanglePositive" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@51891008]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPosBrickAndRectangle -->
        <test-method signature="testPosBrickAndRectangle([D,boolean)[pri:0, instance:test.jwd.task01basic.service.DoesBrickFitRectangleTest@7e5afaa6]" started-at="2021-12-05T02:36:03 MSK" name="testPosBrickAndRectangle" description="Positive_scenario" data-provider="BrickAndRectanglePositive" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@5efa40fe]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPosBrickAndRectangle -->
        <test-method signature="testPosBrickAndRectangle([D,boolean)[pri:0, instance:test.jwd.task01basic.service.DoesBrickFitRectangleTest@7e5afaa6]" started-at="2021-12-05T02:36:03 MSK" name="testPosBrickAndRectangle" description="Positive_scenario" data-provider="BrickAndRectanglePositive" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@24c1b2d2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPosBrickAndRectangle -->
        <test-method signature="testPosBrickAndRectangle([D,boolean)[pri:0, instance:test.jwd.task01basic.service.DoesBrickFitRectangleTest@7e5afaa6]" started-at="2021-12-05T02:36:03 MSK" name="testPosBrickAndRectangle" description="Positive_scenario" data-provider="BrickAndRectanglePositive" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@3e0e1046]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPosBrickAndRectangle -->
      </class> <!-- test.jwd.task01basic.service.DoesBrickFitRectangleTest -->
      <class name="test.jwd.task01basic.service.AverageOfTwoNumberTest">
        <test-method signature="testCalculationAverage([D,double)[pri:0, instance:test.jwd.task01basic.service.AverageOfTwoNumberTest@22e357dc]" started-at="2021-12-05T02:36:03 MSK" name="testCalculationAverage" data-provider="DataForAverage" finished-at="2021-12-05T02:36:03 MSK" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@6cd24612]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculationAverage -->
        <test-method signature="testCalculationAverage([D,double)[pri:0, instance:test.jwd.task01basic.service.AverageOfTwoNumberTest@22e357dc]" started-at="2021-12-05T02:36:03 MSK" name="testCalculationAverage" data-provider="DataForAverage" finished-at="2021-12-05T02:36:03 MSK" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@7dc19a70]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculationAverage -->
        <test-method signature="testCalculationAverage([D,double)[pri:0, instance:test.jwd.task01basic.service.AverageOfTwoNumberTest@22e357dc]" started-at="2021-12-05T02:36:03 MSK" name="testCalculationAverage" data-provider="DataForAverage" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@126253fd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculationAverage -->
        <test-method signature="testCalculationAverage([D,double)[pri:0, instance:test.jwd.task01basic.service.AverageOfTwoNumberTest@22e357dc]" started-at="2021-12-05T02:36:03 MSK" name="testCalculationAverage" data-provider="DataForAverage" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@700fb871]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculationAverage -->
        <test-method signature="testCalculationAverage([D,double)[pri:0, instance:test.jwd.task01basic.service.AverageOfTwoNumberTest@22e357dc]" started-at="2021-12-05T02:36:03 MSK" name="testCalculationAverage" data-provider="DataForAverage" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@5dafbe45]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculationAverage -->
        <test-method signature="testCalculationAverage([D,double)[pri:0, instance:test.jwd.task01basic.service.AverageOfTwoNumberTest@22e357dc]" started-at="2021-12-05T02:36:03 MSK" name="testCalculationAverage" data-provider="DataForAverage" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@7dfd3c81]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculationAverage -->
        <test-method signature="testCalculationAverage([D,double)[pri:0, instance:test.jwd.task01basic.service.AverageOfTwoNumberTest@22e357dc]" started-at="2021-12-05T02:36:03 MSK" name="testCalculationAverage" data-provider="DataForAverage" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@7486b455]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculationAverage -->
        <test-method signature="testCalculationAverage([D,double)[pri:0, instance:test.jwd.task01basic.service.AverageOfTwoNumberTest@22e357dc]" started-at="2021-12-05T02:36:03 MSK" name="testCalculationAverage" data-provider="DataForAverage" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@6933b6c6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-4.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculationAverage -->
        <test-method signature="testCalculationAverage([D,double)[pri:0, instance:test.jwd.task01basic.service.AverageOfTwoNumberTest@22e357dc]" started-at="2021-12-05T02:36:03 MSK" name="testCalculationAverage" data-provider="DataForAverage" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@169bb4dd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculationAverage -->
        <test-method signature="testCalculationAverage([D,double)[pri:0, instance:test.jwd.task01basic.service.AverageOfTwoNumberTest@22e357dc]" started-at="2021-12-05T02:36:03 MSK" name="testCalculationAverage" data-provider="DataForAverage" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@57db2b13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculationAverage -->
        <test-method signature="testCalculationAverage([D,double)[pri:0, instance:test.jwd.task01basic.service.AverageOfTwoNumberTest@22e357dc]" started-at="2021-12-05T02:36:03 MSK" name="testCalculationAverage" data-provider="DataForAverage" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[D@7fb4f2a9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculationAverage -->
      </class> <!-- test.jwd.task01basic.service.AverageOfTwoNumberTest -->
      <class name="test.jwd.task01basic.service.TriangleRadiusOutTest">
        <test-method signature="testRadiusOutCalculation(double,double)[pri:0, instance:test.jwd.task01basic.service.TriangleRadiusOutTest@429bffaa]" started-at="2021-12-05T02:36:03 MSK" name="testRadiusOutCalculation" data-provider="DataForRadiusOut" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.886751]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRadiusOutCalculation -->
        <test-method signature="testRadiusOutCalculation(double,double)[pri:0, instance:test.jwd.task01basic.service.TriangleRadiusOutTest@429bffaa]" started-at="2021-12-05T02:36:03 MSK" name="testRadiusOutCalculation" data-provider="DataForRadiusOut" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.57735]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRadiusOutCalculation -->
        <test-method signature="testRadiusOutCalculation(double,double)[pri:0, instance:test.jwd.task01basic.service.TriangleRadiusOutTest@429bffaa]" started-at="2021-12-05T02:36:03 MSK" name="testRadiusOutCalculation" data-provider="DataForRadiusOut" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.154701]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRadiusOutCalculation -->
        <test-method signature="testRadiusOutCalculation(double,double)[pri:0, instance:test.jwd.task01basic.service.TriangleRadiusOutTest@429bffaa]" started-at="2021-12-05T02:36:03 MSK" name="testRadiusOutCalculation" data-provider="DataForRadiusOut" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[57.735027]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRadiusOutCalculation -->
        <test-method signature="testRadiusOutCalculation(double,double)[pri:0, instance:test.jwd.task01basic.service.TriangleRadiusOutTest@429bffaa]" started-at="2021-12-05T02:36:03 MSK" name="testRadiusOutCalculation" data-provider="DataForRadiusOut" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.239850261675769E9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRadiusOutCalculation -->
      </class> <!-- test.jwd.task01basic.service.TriangleRadiusOutTest -->
      <class name="test.jwd.task01basic.service.PhysicsTest">
        <test-method signature="testDistance([I,int)[pri:0, instance:test.jwd.task01basic.service.PhysicsTest@14555e0a]" started-at="2021-12-05T02:36:03 MSK" name="testDistance" data-provider="DataForPhysics" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@1c9b0314]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDistance -->
        <test-method signature="testDistance([I,int)[pri:0, instance:test.jwd.task01basic.service.PhysicsTest@14555e0a]" started-at="2021-12-05T02:36:03 MSK" name="testDistance" data-provider="DataForPhysics" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@7d3e8655]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDistance -->
        <test-method signature="testDistance([I,int)[pri:0, instance:test.jwd.task01basic.service.PhysicsTest@14555e0a]" started-at="2021-12-05T02:36:03 MSK" name="testDistance" data-provider="DataForPhysics" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@3aa078fd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDistance -->
        <test-method signature="testDistance([I,int)[pri:0, instance:test.jwd.task01basic.service.PhysicsTest@14555e0a]" started-at="2021-12-05T02:36:03 MSK" name="testDistance" data-provider="DataForPhysics" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@475c9c31]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDistance -->
        <test-method signature="testDistance([I,int)[pri:0, instance:test.jwd.task01basic.service.PhysicsTest@14555e0a]" started-at="2021-12-05T02:36:03 MSK" name="testDistance" data-provider="DataForPhysics" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@23941fb4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDistance -->
        <test-method signature="testDistance([I,int)[pri:0, instance:test.jwd.task01basic.service.PhysicsTest@14555e0a]" started-at="2021-12-05T02:36:03 MSK" name="testDistance" data-provider="DataForPhysics" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@7bbc8656]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDistance -->
        <test-method signature="testDistance([I,int)[pri:0, instance:test.jwd.task01basic.service.PhysicsTest@14555e0a]" started-at="2021-12-05T02:36:03 MSK" name="testDistance" data-provider="DataForPhysics" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[I@1b919693]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDistance -->
      </class> <!-- test.jwd.task01basic.service.PhysicsTest -->
      <class name="test.jwd.task01basic.service.TriangleHeightTest">
        <test-method signature="testHeightCalculation(double,double)[pri:0, instance:test.jwd.task01basic.service.TriangleHeightTest@73700b80]" started-at="2021-12-05T02:36:03 MSK" name="testHeightCalculation" data-provider="DataForHeight" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.33]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeightCalculation -->
        <test-method signature="testHeightCalculation(double,double)[pri:0, instance:test.jwd.task01basic.service.TriangleHeightTest@73700b80]" started-at="2021-12-05T02:36:03 MSK" name="testHeightCalculation" data-provider="DataForHeight" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.866]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeightCalculation -->
        <test-method signature="testHeightCalculation(double,double)[pri:0, instance:test.jwd.task01basic.service.TriangleHeightTest@73700b80]" started-at="2021-12-05T02:36:03 MSK" name="testHeightCalculation" data-provider="DataForHeight" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.732]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeightCalculation -->
        <test-method signature="testHeightCalculation(double,double)[pri:0, instance:test.jwd.task01basic.service.TriangleHeightTest@73700b80]" started-at="2021-12-05T02:36:03 MSK" name="testHeightCalculation" data-provider="DataForHeight" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[86.603]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeightCalculation -->
        <test-method signature="testHeightCalculation(double,double)[pri:0, instance:test.jwd.task01basic.service.TriangleHeightTest@73700b80]" started-at="2021-12-05T02:36:03 MSK" name="testHeightCalculation" data-provider="DataForHeight" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.8597753925136538E9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeightCalculation -->
      </class> <!-- test.jwd.task01basic.service.TriangleHeightTest -->
      <class name="test.jwd.task01basic.service.ConvertToCharTest">
        <test-method signature="testConvertToChar([C,int)[pri:0, instance:test.jwd.task01basic.service.ConvertToCharTest@10feca44]" started-at="2021-12-05T02:36:03 MSK" name="testConvertToChar" data-provider="DataForConvertToChar" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[C@1f9e9475]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[91]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertToChar -->
        <test-method signature="testConvertToChar([C,int)[pri:0, instance:test.jwd.task01basic.service.ConvertToCharTest@10feca44]" started-at="2021-12-05T02:36:03 MSK" name="testConvertToChar" data-provider="DataForConvertToChar" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[C@4dc27487]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertToChar -->
        <test-method signature="testConvertToChar([C,int)[pri:0, instance:test.jwd.task01basic.service.ConvertToCharTest@10feca44]" started-at="2021-12-05T02:36:03 MSK" name="testConvertToChar" data-provider="DataForConvertToChar" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[C@1807f5a7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[99]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertToChar -->
        <test-method signature="testConvertToChar([C,int)[pri:0, instance:test.jwd.task01basic.service.ConvertToCharTest@10feca44]" started-at="2021-12-05T02:36:03 MSK" name="testConvertToChar" data-provider="DataForConvertToChar" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[C@1e4f4a5c]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[78]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertToChar -->
        <test-method signature="testConvertToChar([C,int)[pri:0, instance:test.jwd.task01basic.service.ConvertToCharTest@10feca44]" started-at="2021-12-05T02:36:03 MSK" name="testConvertToChar" data-provider="DataForConvertToChar" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[C@5a7fe64f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[125]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertToChar -->
        <test-method signature="testConvertToChar([C,int)[pri:0, instance:test.jwd.task01basic.service.ConvertToCharTest@10feca44]" started-at="2021-12-05T02:36:03 MSK" name="testConvertToChar" data-provider="DataForConvertToChar" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[C@69ee81fc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[126]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertToChar -->
      </class> <!-- test.jwd.task01basic.service.ConvertToCharTest -->
      <class name="test.jwd.task01basic.service.TriangleRadiusInTest">
        <test-method signature="testRadiusInCalculation(double,double)[pri:0, instance:test.jwd.task01basic.service.TriangleRadiusInTest@3e84448c]" started-at="2021-12-05T02:36:03 MSK" name="testRadiusInCalculation" data-provider="DataForRadiusIn" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.443376]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRadiusInCalculation -->
        <test-method signature="testRadiusInCalculation(double,double)[pri:0, instance:test.jwd.task01basic.service.TriangleRadiusInTest@3e84448c]" started-at="2021-12-05T02:36:03 MSK" name="testRadiusInCalculation" data-provider="DataForRadiusIn" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.57735]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRadiusInCalculation -->
        <test-method signature="testRadiusInCalculation(double,double)[pri:0, instance:test.jwd.task01basic.service.TriangleRadiusInTest@3e84448c]" started-at="2021-12-05T02:36:03 MSK" name="testRadiusInCalculation" data-provider="DataForRadiusIn" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.288675]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRadiusInCalculation -->
        <test-method signature="testRadiusInCalculation(double,double)[pri:0, instance:test.jwd.task01basic.service.TriangleRadiusInTest@3e84448c]" started-at="2021-12-05T02:36:03 MSK" name="testRadiusInCalculation" data-provider="DataForRadiusIn" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[28.867513]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRadiusInCalculation -->
        <test-method signature="testRadiusInCalculation(double,double)[pri:0, instance:test.jwd.task01basic.service.TriangleRadiusInTest@3e84448c]" started-at="2021-12-05T02:36:03 MSK" name="testRadiusInCalculation" data-provider="DataForRadiusIn" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6.19925130837885E8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRadiusInCalculation -->
      </class> <!-- test.jwd.task01basic.service.TriangleRadiusInTest -->
      <class name="test.jwd.task01basic.service.ConvertToIntTest">
        <test-method signature="testConvertToInt(char,int)[pri:0, instance:test.jwd.task01basic.service.ConvertToIntTest@3059cbc]" started-at="2021-12-05T02:36:03 MSK" name="testConvertToInt" data-provider="DataForConvertToInt" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[91]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertToInt -->
        <test-method signature="testConvertToInt(char,int)[pri:0, instance:test.jwd.task01basic.service.ConvertToIntTest@3059cbc]" started-at="2021-12-05T02:36:03 MSK" name="testConvertToInt" data-provider="DataForConvertToInt" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[!]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[33]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertToInt -->
        <test-method signature="testConvertToInt(char,int)[pri:0, instance:test.jwd.task01basic.service.ConvertToIntTest@3059cbc]" started-at="2021-12-05T02:36:03 MSK" name="testConvertToInt" data-provider="DataForConvertToInt" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[M]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertToInt -->
        <test-method signature="testConvertToInt(char,int)[pri:0, instance:test.jwd.task01basic.service.ConvertToIntTest@3059cbc]" started-at="2021-12-05T02:36:03 MSK" name="testConvertToInt" data-provider="DataForConvertToInt" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[=]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[61]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertToInt -->
        <test-method signature="testConvertToInt(char,int)[pri:0, instance:test.jwd.task01basic.service.ConvertToIntTest@3059cbc]" started-at="2021-12-05T02:36:03 MSK" name="testConvertToInt" data-provider="DataForConvertToInt" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[k]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[107]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertToInt -->
        <test-method signature="testConvertToInt(char,int)[pri:0, instance:test.jwd.task01basic.service.ConvertToIntTest@3059cbc]" started-at="2021-12-05T02:36:03 MSK" name="testConvertToInt" data-provider="DataForConvertToInt" finished-at="2021-12-05T02:36:03 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertToInt -->
        <test-method signature="testConvertToInt(char,int)[pri:0, instance:test.jwd.task01basic.service.ConvertToIntTest@3059cbc]" started-at="2021-12-05T02:36:03 MSK" name="testConvertToInt" data-provider="DataForConvertToInt" finished-at="2021-12-05T02:36:03 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[~]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[126]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertToInt -->
      </class> <!-- test.jwd.task01basic.service.ConvertToIntTest -->
    </test> <!-- CheckGroup -->
  </suite> <!-- Suite1 -->
</testng-results>
